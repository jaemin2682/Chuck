DROP DATABASE IF EXISTS CHUCK;
CREATE DATABASE CHUCK;
USE CHUCK;

DROP TABLE IF EXISTS USERS;

CREATE TABLE USERS
(
    ID           BIGINT         NOT NULL,
    LAST_DATE    DATE        NOT NULL,
    NAME         VARCHAR(10) NOT NULL,
    PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS `GROUPS`;

CREATE TABLE `GROUPS`
(
    ID INT         NOT NULL AUTO_INCREMENT,
    USER_ID  BIGINT         NOT NULL,
    NAME     VARCHAR(10) NOT NULL,
    INTRO   TEXT(500),
    TOKEN   TEXT DEFAULT NULL,
    PUBLISHED_DATE DATE,
    PRIMARY KEY (ID),
    UNIQUE KEY `UNQ_TOKEN` (TOKEN) USING HASH,
    CONSTRAINT FK_USERS_GROUPS FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

DROP TABLE IF EXISTS GROUP_MEMBERS;

CREATE TABLE GROUP_MEMBERS
(
    USER_ID  BIGINT NOT NULL,
    GROUP_ID INT NOT NULL,
    FACE TEXT,
    IS_OWNER BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (USER_ID, GROUP_ID),
    CONSTRAINT FK_USERS_GROUP_MEMBERS FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_GROUPS_GROUP_MEMBERS FOREIGN KEY (GROUP_ID) REFERENCES `GROUPS` (ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS DIARIES;

CREATE TABLE DIARIES
(
    ID INT         NOT NULL AUTO_INCREMENT,
    TITLE varchar(50),
    IMAGE TEXT(500)      NOT NULL,
    CONTENT     TEXT NOT NULL,
    WRITER     BIGINT NOT NULL,
    GROUP_ID   INT NOT NULL,
    `DATE` DATE,
    PRIMARY KEY (ID),
    CONSTRAINT FK_USERS_DIARIES FOREIGN KEY (WRITER) REFERENCES USERS (ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_GROUPS_DIARIES FOREIGN KEY (GROUP_ID) REFERENCES `GROUPS` (ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS REPLIES;

CREATE TABLE REPLIES
(
    ID       INT  NOT NULL AUTO_INCREMENT,
    WRITER   BIGINT  NOT NULL,
    COMMENT  VARCHAR(200) NOT NULL,
    DIARY_ID INT  NOT NULL,
    DATE     DATETIME,
    PRIMARY KEY (ID),
    CONSTRAINT FK_DIARIES_REPLIES FOREIGN KEY (DIARY_ID) REFERENCES DIARIES (ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_USERS_REPLIES FOREIGN KEY (WRITER) REFERENCES USERS (ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS PICTURES;

CREATE TABLE PICTURES
(
    ID INT NOT NULL AUTO_INCREMENT,
    DIARY_ID INT NOT NULL,
    PATH VARCHAR(500) NOT NULL,
    PRIMARY KEY (ID), 
    CONSTRAINT FK_DIARIES_PICTURES FOREIGN KEY (DIARY_ID) REFERENCES DIARIES (ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS MUSIC;

CREATE TABLE MUSIC
(
    ID          INT AUTO_INCREMENT NOT NULL,
    NAME        VARCHAR(50)        NOT NULL,
    ALBUM_COVER TEXT(500)          NOT NULL,
    GENRE       VARCHAR(20)        NOT NULL,
    PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS LOGS;

CREATE TABLE LOGS
(
    ID         INT  NOT NULL AUTO_INCREMENT,
    GROUP_ID   INT  NOT NULL,
    CONTENT    TEXT NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT FK_GROUPS_LOGS FOREIGN KEY (GROUP_ID) REFERENCES `GROUPS` (ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);
